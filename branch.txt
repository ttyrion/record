1、查看本地分支
git branch -a
命令的结果可以看出当前是哪一个分支，文字颜色会不一样。

2、创建分支
git branch <branchname>
把创建的分支推送到远程:
git push origin <branchname>
但是这时候，本地branchname分支和远程branchname分支并没有建立关联关系，还不能简单通过push或者pull从远程branchname分支推送或拉取内容。
建立关系的命令如下：
git push --set-upstream origin <branchname>

3、切换到分支
git checkout <branchname>
一个命令完成创建分支并且切换到该分支：
git checkout -b <branchname>

4、删除分支
删除本地分支：
git branch -d <branchname>
删除远程分支：
git push origin --delete <branchname>

5、重命名远程分支
重命名远程分支：可以看成是删除远程分支，然后重命名本地分支，再push一个远程分支。
git push origin --delete <branchname>
git branch -m branchname new_branchname
git push origin new_branchname

6、同步本地和远程分支
其他人删除了远程的某些分支以后，本地的分支里面依然可以看到被删除的分支,git branch -a还是会列出被删除的分支。
使用git remote show origin可以查看分支状态，这时候可以看到被删除分支状态是stale的。
执行git remote prune origin可以将被删除分支从本地删除。
或者：git fetch -p
这个命令在fetch之后删除没有与远程分支对应的本地分支（不知是否会删除本地建立的还没有push到远程的那些分支？？？？？）。

7、submodule的更新
有时候用git submodule update更新submodule，发现并没有更新。处理如下：
git submodule init
git submodule update